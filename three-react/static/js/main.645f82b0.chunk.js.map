{"version":3,"sources":["rendererWebGL/data.ts","rendererWebGL/ducks.ts","rendererWebGL/mesh/Mesh.tsx","rendererWebGL/geometry/CuboidGeometry.ts","rendererWebGL/geometry/PipeGeometry.ts","rendererWebGL/geometry/Buffer.ts","rendererWebGL/geometry/ExtrusionGeometry.ts","rendererWebGL/geometry/GroundGeometry.ts","rendererWebGL/mesh/ExtrusionMesh.tsx","rendererWebGL/mesh/CuboidMesh.tsx","rendererWebGL/mesh/PipeMesh.tsx","rendererWebGL/mesh/AnimatedGroup.tsx","rendererWebGL/mesh/GroundMesh.tsx","rendererWebGL/mesh/index.tsx","rendererWebGL/util/cameraController.ts","rendererWebGL/scene/Camera.tsx","rendererWebGL/scene/Light.tsx","rendererWebGL/scene/Measurement.tsx","rendererWebGL/scene/index.ts","rendererWebGL/scene/Scene.tsx","rendererWebGL/material/envmap.ts","rendererWebGL/material/Glass.ts","rendererWebGL/material/Metal.ts","rendererWebGL/material/Ground.ts","rendererWebGL/material/index.ts","App.tsx","index.tsx"],"names":["points","left","leftHoles","door","transom","right","smoothVertices","pointsToPolygon","z","map","arr","scene","origin","junctionAngles","defaultCamera","position","lookAt","ground","lengthX","lengthZ","positions","offset","children","id","rotation","material","gazeSize","uvScale","operable","type","frontFace","frontFaceHoles","hole","backFace","backFaceHoles","lengthY","pivot","pd","ph","radius","measurements","length","start","parentId","finish","GMeshByID","Map","defaultRendererState","counter","gazeDirection","undefined","gazeTarget","selected","selectionFilter","orthographic","showJunctionAngles","showGround","showHardware","showMeasurements","animateDoors","doFocusObject","select","payload","doModifyDisplay","fromVec3","vec3","x","y","applyFocusObject","state","action","get","mesh","updateMatrixWorld","Vector3","getWorldDirection","multiplyScalar","box3","Box3","setFromObject","getCenter","gazeByMesh","applyModifyDisplay","applySetSelectionFilter","Mesh","canSelect","onFocusObject","visible","geometry","useState","hover","setHover","onClick","useCallback","e","stopPropagation","onPointerOver","onPointerOut","curMaterial","standard","ref","useUpdate","set","useEffect","current","curRotation","update","px","py","pz","ox","oy","oz","applyAxisAngle","up","openingAngle","Math","PI","angularVelocity","easing","TWEEN","Easing","Quadratic","InOut","resetToClosed","Tween","to","max","abs","onUpdate","closedToOpenIn","openInToClosed","closedToOpenOut","openOutToClosed","chain","stop","remove","CuboidGeometry","props","className","BoxBufferGeometry","PipeGeometry","pointsVec3","point","CatmullRomCurve3","TubeBufferGeometry","Float32Buffer","elemSize","buffer","nextElemIndex","this","Array","bufferIndex","i","elemIndex","slice","srcElemIndex","addElem","getElem","Float32BufferAttribute","bufferName","console","error","Error","Vec2Buffer","Vector2","Vec3Buffer","ExtrusionGeometry","vertices","uvCoords","triangles","numFaceVertices","countFaceVertices","log","frontFaceTriangles","triangulateFace","backFaceTriangles","numVertices","backOffset","numTriangles","addFace","nextVertexIndex","addSideFacesForPolygon","forEach","ensureFilled","setAttribute","asAttribute","setIndex","asBuffer","computeVertexNormals","face","holes","polygon","toContour","holePoints","ShapeUtils","triangulateShape","vertex","add","triangleIndices","triangleIndexOffset","reverseTriangles","addVertexAndUV","tri","v0","v1","v2","sourceIndex","sharedIndex","share","addCopyOf","startVertexIndex","isHole","frontOffset","prevBackIndex","prevFrontIndex","firstBackIndex","nextFreeElemIndex","firstFrontIndex","leftIndex","rightIndex","shareLeft","backLeft","addOrShareSideVertex","frontLeft","shareRight","backRight","frontRight","BufferGeometry","GroundGeometry","PlaneBufferGeometry","ExtrusionMesh","meshProps","useMemo","CuboidMesh","PipeMesh","AnimatedGroup","useSpring","smoothedOrigin","smoothedRotation","group","GroundMesh","BuildMeshes","elements","materialLibrary","isSelected","doBuild","MeshByType","key","startsWith","DifferentialCameraControls","listeners","camera","domElement","minTransitionVelocity","minTransitionIdleDuration","viewPadding","lastTarget","lastSpherical","lastZoom","doingTransition","currentTransitionIdleDuration","tempVec3","Spherical","bind","reset","notifyStartedTransition","notifyFinishedTransition","notifyUpdatedView","onResize","resetView","setMode","setGaze","worldToPage","window","addEventListener","removeEventListener","delta","updated","theta","phi","dist","distanceTo","_target","_spherical","_zoom","velocity","copy","listener","event","target","tx","ty","tz","setLookAt","primaryRotate","mouseButtons","CameraControls","ACTION","ROTATE","TRUCK","primary","secondary","w","h","d","p","getDistanceToFit","dx","dy","dz","project","_camera","bounds","_domElement","getBoundingClientRect","halfWidth","width","halfHeight","height","scrollX","top","scrollY","GCameraController","cameraControls","install","THREE","addListener","removeListener","setCamera","updateFrame","getCameraControls","updateWorldMatrix","delete","dispose","Camera","startLookAt","startPosition","useRef","useThree","gl","setDefaultCamera","useFrame","far","near","fov","Light","intensity","CameraListenerMeasurement","startParentID","startOrigin","finishParentID","finishOrigin","notifyShowingChanged","allowShow","startLocal","startWorld","finishLocal","finishWorld","midPoint","localToWorld","updatePosition","meshID","local","world","controls","addVectors","style","transform","Measurement","measurement","curLength","setCurLength","opacity","config","stiff","setStyle","showing","onChange","Number","value","input","connect","rendererState","dispatch","objectID","cameraProps","upAxis","groups","rotationY","offX","offY","offZ","MathUtils","DEG2RAD","BuildScene","envMap","setPath","load","bgTexture","wrapS","wrapT","repeat","side","DoubleSide","fullGlass","metalness","roughness","reflectivity","clearcoat","clearcoatRoughness","transparent","color","fastGlass","shininess","fullMetal","fastMetal","fullGroundMat","fastGroundMat","fullMatLibrary","glass","metal","fastMatLibrary","onShowJunctionAngles","onShowGround","onShowHardware","onShowMeasurements","onAnimateDoors","onSetSelectionFilter","filter","hdMaterial","setHdMaterial","zIndex","disabled","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.645f82b0.chunk.js","sourcesContent":["import { SceneTree } from \"./ducks\";\r\n\r\nconst points = {\r\n    left:     [ [-400, -1050], [400, -1050], [400, 1050], [-400, 1050] ],\r\n    leftHoles: [ [[-35, 800],[-35, 750],[35, 750],[35, 800]] ],\r\n    door:     [ [-350, -895], [350, -895], [350, 900], [-350,  900] ],\r\n    transom:  [ [-350, 900], [350, 900], [350, 1195], [-350, 1195] ],\r\n    right:    [ [-300, -1050], [-3, -1050], [-3, -755], [0, -750], [5, -747], [300, -747], [300, 1050], [-300, 1050] ],\r\n};\r\nconst smoothVertices = {\r\n    left: [],\r\n    door: [],\r\n    transom: [],\r\n    right: []\r\n};\r\n\r\nfunction pointsToPolygon(points : number[][], z : number) : number[][] {\r\n    return points.map(arr => [arr[0], arr[1], z]);\r\n}\r\n\r\nconst z = 5;\r\nconst ph = 128; // pipe height\r\nconst pd = 64; // pipe depth\r\n\r\nexport const scene : SceneTree = {\r\n    origin : [0, 1000, 0],\r\n    junctionAngles: [ 0, 90, 90, 0 ],\r\n    defaultCamera : {\r\n        position: [2300, 2050, 1250],\r\n        lookAt: [800, 2050, 0]\r\n    },\r\n    ground: {\r\n        origin : [400, 1000, -350],\r\n        lengthX : 1200,\r\n        lengthZ : 1100,\r\n    },\r\n    positions: [\r\n        {\r\n            position: 1,\r\n            offset: [800 - z, 0, -z-1],\r\n            children: [\r\n                {\r\n                    id: \"panel/1\",\r\n                    origin: [400, 1050, 0],\r\n                    rotation: [0, 0, 0],\r\n                    material: \"glass\",\r\n                    gazeSize: [800, 2100, z*2],\r\n                    uvScale: 256,\r\n                    operable: false,\r\n                    type: \"extrusion\",\r\n                    frontFace: pointsToPolygon(points.left, z),\r\n                    frontFaceHoles: points.leftHoles.map(hole => pointsToPolygon(hole, z)),\r\n                    backFace: pointsToPolygon(points.left, -z),\r\n                    backFaceHoles: points.leftHoles.map(hole => pointsToPolygon(hole, -z)),\r\n                    smoothVertices: smoothVertices.left,\r\n\r\n                    children: [\r\n                        {\r\n                            id: \"feature/1\",\r\n                            origin: [400 - 32 + z, -550, 0],\r\n                            rotation: [0, 0, 0],\r\n                            material: \"metal\",\r\n                            gazeSize: [64*4, 128*4, z*4],\r\n                            uvScale: 16,\r\n                            operable: false,\r\n                            type: \"cuboid\",\r\n                            lengthX: 64,\r\n                            lengthY: 128,\r\n                            lengthZ: z*4,\r\n                        },\r\n                        {\r\n                            id: \"feature/2\",\r\n                            origin: [400 - 32 + z, 150, 0],\r\n                            rotation: [0, 0, 0],\r\n                            material: \"metal\",\r\n                            gazeSize: [64*4, 128*4, z*4],\r\n                            uvScale: 16,\r\n                            operable: false,\r\n                            type: \"cuboid\",\r\n                            lengthX: 64,\r\n                            lengthY: 128,\r\n                            lengthZ: z*4,\r\n                        },\r\n                        {\r\n                            id: \"feature/3\",\r\n                            origin: [400 - 32 + z, 900, 0],\r\n                            rotation: [0, 0, 0],\r\n                            material: \"metal\",\r\n                            gazeSize: [64*4, 64*4, z*4],\r\n                            uvScale: 16,\r\n                            operable: false,\r\n                            type: \"cuboid\",\r\n                            lengthX: 64,\r\n                            lengthY: 64,\r\n                            lengthZ: z*4,\r\n                        }\r\n                    ]\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            position: 2,\r\n            offset: [700 + z + 1, 0, z],\r\n            children: [\r\n                {\r\n                    type: \"extrusion\",\r\n                    id: \"panel/2\",\r\n                    frontFace: pointsToPolygon(points.door, z),\r\n                    frontFaceHoles: [],\r\n                    backFace: pointsToPolygon(points.door, -z),\r\n                    backFaceHoles: [],\r\n                    smoothVertices: smoothVertices.door,\r\n                    uvScale: 256,\r\n                    operable: true,\r\n                    pivot: [0, 0, 0],\r\n                    origin: [350, 900, 0],\r\n                    rotation: [0, 0, 0],\r\n                    gazeSize: [z*2, 1800, 700],\r\n                    material: 'glass',\r\n\r\n                    children: [\r\n                        {\r\n                            id: \"feature/6\",\r\n                            origin: [250, 100, 0],\r\n                            rotation: [0, 0, 0],\r\n                            material: \"metal\",\r\n                            gazeSize: [pd*4, ph*8, 12*4],\r\n                            uvScale: 16,\r\n                            operable: false,\r\n                            type: \"pipe\",\r\n                            radius: 12,\r\n                            points: [\r\n                                [0, -ph, 0],\r\n                                [0, -ph, pd],\r\n                                [0, -ph/2, pd],\r\n                                [0, 0, pd],\r\n                                [0, ph/2, pd],\r\n                                [0, ph, pd],\r\n                                [0, ph, 0],\r\n                            ]\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    type: \"extrusion\",\r\n                    id: \"panel/3\",\r\n                    frontFace: pointsToPolygon(points.transom, z),\r\n                    frontFaceHoles: [],\r\n                    backFace: pointsToPolygon(points.transom, -z),\r\n                    backFaceHoles: [],\r\n                    smoothVertices: smoothVertices.transom,\r\n                    uvScale: 256,\r\n                    operable: false,\r\n                    origin: [350, 900+5, 0],\r\n                    rotation: [0, 0, 0],\r\n                    gazeSize: [z*2, 300, 700],\r\n                    material: 'glass',\r\n                    children: [\r\n                        {\r\n                            id: \"feature/4\",\r\n                            origin: [32+z-1-350, 1050-5, 0],\r\n                            rotation: [0, 0, 0],\r\n                            material: \"metal\",\r\n                            gazeSize: [64*4, 64*4, z*4],\r\n                            uvScale: 16,\r\n                            operable: false,\r\n                            type: \"cuboid\",\r\n                            lengthX: 64,\r\n                            lengthY: 64,\r\n                            lengthZ: z*4,\r\n                        },\r\n                        {\r\n                            id: \"feature/5\",\r\n                            origin: [700-32-z+1-350, 1050-5, 0],\r\n                            rotation: [0, 0, 0],\r\n                            material: \"metal\",\r\n                            gazeSize: [64*4, 64*4, z*4],\r\n                            uvScale: 16,\r\n                            operable: false,\r\n                            type: \"cuboid\",\r\n                            lengthX: 64,\r\n                            lengthY: 64,\r\n                            lengthZ: z*4,\r\n                        },\r\n                    ]\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            position: 3,\r\n            offset: [600, 0, z],\r\n            children: [\r\n                {\r\n                    type: \"extrusion\",\r\n                    id: \"panel/4\",\r\n                    frontFace: pointsToPolygon(points.right, z),\r\n                    frontFaceHoles: [],\r\n                    backFace: pointsToPolygon(points.right, -z),\r\n                    backFaceHoles: [],\r\n                    smoothVertices: smoothVertices.right,\r\n                    uvScale: 256,\r\n                    operable: false,\r\n                    origin: [300, 1050, 0],\r\n                    rotation: [0, 0, 0],\r\n                    gazeSize: [600, 2100, z*2],\r\n                    material: 'glass',\r\n                    children: [\r\n                        {\r\n                            id: \"feature/7\",\r\n                            origin: [32 - z - 300, 900, 0],\r\n                            rotation: [0, 0, 0],\r\n                            material: \"metal\",\r\n                            gazeSize: [64*4, 64*4, z*4],\r\n                            uvScale: 16,\r\n                            operable: false,\r\n                            type: \"cuboid\",\r\n                            lengthX: 64,\r\n                            lengthY: 64,\r\n                            lengthZ: z*4,\r\n                        }\r\n                    ]\r\n                },\r\n            ],\r\n        }\r\n    ],\r\n    measurements: [\r\n        {\r\n            id: \"measurement/1\",\r\n            length: 2100,\r\n            start: {\r\n                parentId : \"panel/1\",\r\n                origin : [-400, -1050, 0],\r\n            },\r\n            finish : {\r\n                parentId : \"panel/1\",\r\n                origin : [-400, 1050, 0]\r\n            }\r\n        },\r\n        {\r\n            id: \"measurement/2\",\r\n            length: 800,\r\n            start: {\r\n                parentId : \"panel/1\",\r\n                origin : [-400, -1050, 0],\r\n            },\r\n            finish : {\r\n                parentId : \"panel/1\",\r\n                origin : [400, -1050, 0]\r\n            }\r\n        },\r\n        {\r\n            id: \"measurement/3\",\r\n            length: 700,\r\n            start: {\r\n                parentId : \"panel/2\",\r\n                origin : [-350, -900, 0],\r\n            },\r\n            finish : {\r\n                parentId : \"panel/2\",\r\n                origin : [350, -900, 0]\r\n            }\r\n        }\r\n    ]\r\n};\r\n","import {Box3, Vector3} from \"three\";\r\n\r\nconst FOCUS_OBJECT = 'FOCUS_OBJECT';\r\nconst MODIFY_DISPLAY = 'MODIFY_DISPLAY';\r\nconst SET_SELECTION_FILTER = 'SET_SELECTION_FILTER';\r\n\r\n// TODO can we avoid this global?\r\nexport const GMeshByID = new Map();\r\n\r\ntype RendererState = {\r\n    counter : number, // TODO SM avoidable? used to trigger side effects if the user selects the same obj twice\r\n    gazeDirection ?: number[],\r\n    gazeTarget ?: number[],\r\n    gazeSize ?: number[],\r\n    selected : string,\r\n    selectionFilter : string,\r\n    orthographic : boolean,\r\n\r\n    showJunctionAngles : boolean,\r\n    showGround : boolean,\r\n    showHardware : boolean,\r\n    showMeasurements : boolean,\r\n    animateDoors : boolean,\r\n}\r\n\r\ntype RendererAction = {\r\n    type : string,\r\n    payload : {\r\n        id ?: string,\r\n        select ?: boolean,\r\n        orthographic ?: boolean,\r\n        showJunctionAngles ?: boolean,\r\n        selectionFilter ?: string,\r\n    }\r\n}\r\n\r\nconst defaultRendererState : RendererState = {\r\n    counter : 0,\r\n    gazeDirection : undefined,\r\n    gazeTarget : undefined,\r\n    gazeSize : undefined,\r\n    selected : \"\",\r\n    selectionFilter : \"\",\r\n    orthographic: false,\r\n\r\n    showJunctionAngles : true,\r\n    showGround : false,\r\n    showHardware : true,\r\n    showMeasurements : false,\r\n    animateDoors : false,\r\n};\r\n\r\nexport type SceneElement = {\r\n    id: string,\r\n    origin: number[],\r\n    rotation: number[],\r\n    material: string,\r\n    gazeSize: number[],\r\n    uvScale: number,\r\n    operable: boolean,\r\n    pivot ?: number[], // operable only\r\n    type: string,\r\n\r\n    frontFace ?: number[][],\r\n    frontFaceHoles ?: number[][][],\r\n    backFace ?: number[][],\r\n    backFaceHoles ?: number[][][],\r\n    smoothVertices ?: number[],\r\n\r\n    lengthX ?: number,\r\n    lengthY ?: number,\r\n    lengthZ ?: number,\r\n\r\n    radius ?: number,\r\n    points ?: number[][]\r\n\r\n    children ?: SceneElement[]\r\n}\r\n\r\nexport type ScenePosition = {\r\n    position: number,\r\n    offset: number[],\r\n    children: SceneElement[]\r\n}\r\n\r\nexport type SceneMeasurement = {\r\n    id : string,\r\n    length : number,\r\n    start : {\r\n        parentId : string,\r\n        origin : number[]\r\n    },\r\n    finish : {\r\n        parentId : string,\r\n        origin : number[]\r\n    }\r\n};\r\n\r\nexport type SceneTree = {\r\n    origin : number[],\r\n    junctionAngles : number[],\r\n    defaultCamera : {\r\n        position: number[],\r\n        lookAt: number[]\r\n    },\r\n    ground : {\r\n        origin : number[],\r\n        lengthX : number,\r\n        lengthZ : number,\r\n    }\r\n    positions: ScenePosition[],\r\n    measurements: SceneMeasurement[]\r\n}\r\n\r\nexport function doFocusObject(id : string, select : boolean) : RendererAction {\r\n    return {\r\n        type: FOCUS_OBJECT,\r\n        payload: { id, select }\r\n    };\r\n}\r\n\r\nexport function doModifyDisplay(payload : {\r\n    showJunctionAngles ?: boolean,\r\n    showGround ?: boolean,\r\n    showHardware ?: boolean,\r\n    showMeasurements ?: boolean,\r\n    animateDoors ?: boolean\r\n}) : RendererAction {\r\n    return {\r\n        type: MODIFY_DISPLAY,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function doSetSelectionFilter(selectionFilter : string) : RendererAction {\r\n    return {\r\n        type: SET_SELECTION_FILTER,\r\n        payload: { selectionFilter }\r\n    }\r\n}\r\n\r\n// TODO SM Move to a util file\r\nfunction fromVec3(vec3 : Vector3) : number[] {\r\n    return [vec3.x, vec3.y, vec3.z];\r\n}\r\n\r\nfunction gazeByMesh(id : string) : (number[]|undefined)[] {\r\n    // TODO SM Refactor - cleanup\r\n    if (id !== \"\") {\r\n        const { mesh, gazeSize } = GMeshByID.get(id);\r\n        if (mesh) {\r\n            mesh.updateMatrixWorld();\r\n            const vec3 = new Vector3(0, 0, 0);\r\n            mesh.getWorldDirection(vec3).multiplyScalar(-1); // we want -Z direction, not +Z\r\n            const box3 = new Box3();\r\n            box3.setFromObject(mesh);\r\n            const gazeDirection = fromVec3(vec3);\r\n            box3.getCenter(vec3);\r\n            const gazeTarget = fromVec3(vec3);\r\n            return [ gazeDirection, gazeTarget, gazeSize ];\r\n        }\r\n    }\r\n    return [ undefined, undefined ];\r\n}\r\n\r\nfunction applyFocusObject(state : RendererState, action : RendererAction) : RendererState {\r\n    const { id, select } = action.payload;\r\n    const [ gazeDirection, gazeTarget, gazeSize ] = gazeByMesh(id!);\r\n    const selected = select ? id! : state.selected;\r\n    const counter = (state.counter + 1) % 100;\r\n    return { ...state, counter, gazeDirection, gazeTarget, gazeSize, selected };\r\n}\r\n\r\nfunction applyModifyDisplay(state : RendererState, action : RendererAction) : RendererState {\r\n    return { ...state, ...action.payload };\r\n}\r\n\r\nfunction applySetSelectionFilter(state : RendererState, action : RendererAction) : RendererState {\r\n    return { ...state, ...action.payload };\r\n}\r\n\r\nexport function rendererReducer(state = defaultRendererState, action : RendererAction) : RendererState {\r\n    switch (action.type) {\r\n        case FOCUS_OBJECT:\r\n            return applyFocusObject(state, action);\r\n        case MODIFY_DISPLAY:\r\n            return applyModifyDisplay(state, action);\r\n        case SET_SELECTION_FILTER:\r\n            return applySetSelectionFilter(state, action);\r\n        default: return state;\r\n    }\r\n}","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {Geometry, BufferGeometry, Object3D} from \"three\";\r\nimport { PointerEvent } from \"react-three-fiber/canvas\";\r\nimport { MaterialGroup } from \"../material\";\r\nimport { animated } from \"react-spring/three\";\r\nimport { useUpdate} from \"react-three-fiber\";\r\nimport { GMeshByID } from \"../ducks\";\r\nimport TWEEN from \"@tweenjs/tween.js\";\r\n\r\nexport type CanSelectObjectFn = (id : string) => boolean;\r\nexport type IsObjectSelectedFn = (id : string) => boolean;\r\nexport type FocusObjectFn = (id : string, select : boolean) => void;\r\n\r\nexport type MeshProps = {\r\n    id : string,\r\n    material : MaterialGroup,\r\n\r\n    canSelect : boolean,\r\n    selected : boolean,\r\n    onFocusObject : FocusObjectFn,\r\n    gazeSize : number[],\r\n\r\n    operable : boolean,\r\n    animateDoors : boolean,\r\n\r\n    origin : number[],\r\n    pivot ?: number[],\r\n    rotation : number[],\r\n    visible : boolean,\r\n};\r\n\r\nexport const Mesh : React.FC<MeshProps & {geometry : Geometry | BufferGeometry}> = ({\r\n    id, material,\r\n    canSelect, selected, onFocusObject,\r\n    gazeSize,\r\n    operable, animateDoors,\r\n    origin, pivot, rotation, visible,\r\n    geometry,\r\n    children,\r\n}) => {\r\n    const [hover, setHover] = useState(false);\r\n\r\n    // TODO SM Replace all functions with useCallbacks\r\n    const onClick = useCallback((e : PointerEvent) => {\r\n        e.stopPropagation();\r\n        if (canSelect) {\r\n            onFocusObject(selected ? '' : id, true);\r\n        }\r\n    }, [canSelect, selected, id, onFocusObject]);\r\n\r\n    const onPointerOver = useCallback((e : PointerEvent) => {\r\n        e.stopPropagation();\r\n        if (canSelect && !hover) {\r\n            setHover(true);\r\n        }\r\n    }, [canSelect, hover, setHover]);\r\n\r\n    const onPointerOut = useCallback(() => {\r\n        if (hover) {\r\n            setHover(false);\r\n        }\r\n    }, [hover, setHover]);\r\n\r\n    const curMaterial = selected ? material.selected : hover ? material.hover : material.standard;\r\n\r\n    const ref = useUpdate(mesh => {\r\n        GMeshByID.set(id, { mesh, gazeSize });\r\n    }, [id, gazeSize]);\r\n\r\n    // TODO SM Animate about various left / right axis, rather than centre\r\n    useEffect(() => {\r\n        if (ref.current && operable && animateDoors) {\r\n            const mesh : Object3D = ref.current;\r\n            const curRotation = { y: mesh.rotation.y };\r\n            const update = () => {\r\n                const [px, py, pz] = pivot || [0, 0, 0];\r\n                const [ox, oy, oz] = origin;\r\n                mesh.position.set(ox-px, oy-py, oz-pz);\r\n                mesh.position.applyAxisAngle(mesh.up, curRotation.y);\r\n                const { x, y, z } = mesh.position;\r\n                mesh.position.set(x+px, y+py, z+pz);\r\n                mesh.rotation.y = curRotation.y;\r\n            };\r\n\r\n            const duration = 2000;\r\n            const openingAngle = Math.PI * 0.45;\r\n            const angularVelocity = openingAngle / duration;\r\n            const easing = TWEEN.Easing.Quadratic.InOut;\r\n\r\n            const resetToClosed = new TWEEN.Tween(curRotation)\r\n                .to({y: 0}, Math.max(0.01, Math.abs(curRotation.y) / angularVelocity))\r\n                .onUpdate(update);\r\n            const closedToOpenIn = new TWEEN.Tween(curRotation)\r\n                .to({y: openingAngle}, duration)\r\n                .easing(easing)\r\n                .onUpdate(update);\r\n            const openInToClosed = new TWEEN.Tween(curRotation)\r\n                .to({y: 0}, duration)\r\n                .easing(easing)\r\n                .onUpdate(update);\r\n            const closedToOpenOut = new TWEEN.Tween(curRotation)\r\n                .to({y: -openingAngle}, duration)\r\n                .easing(easing)\r\n                .onUpdate(update);\r\n            const openOutToClosed = new TWEEN.Tween(curRotation)\r\n                .to({y: 0}, duration)\r\n                .easing(easing)\r\n                .onUpdate(update);\r\n\r\n            resetToClosed.chain(closedToOpenIn);\r\n            closedToOpenIn.chain(openInToClosed);\r\n            openInToClosed.chain(closedToOpenOut);\r\n            closedToOpenOut.chain(openOutToClosed);\r\n            openOutToClosed.chain(closedToOpenIn);\r\n\r\n            resetToClosed.start();\r\n\r\n            return () => {\r\n                openOutToClosed.stop();\r\n                closedToOpenOut.stop();\r\n                openInToClosed.stop();\r\n                closedToOpenIn.stop();\r\n                resetToClosed.stop();\r\n\r\n                TWEEN.remove(openOutToClosed);\r\n                TWEEN.remove(closedToOpenOut);\r\n                TWEEN.remove(openInToClosed);\r\n                TWEEN.remove(closedToOpenIn);\r\n                TWEEN.remove(resetToClosed);\r\n            }\r\n        }\r\n    }, [ref, origin, operable, animateDoors]);\r\n\r\n\r\n    return <animated.mesh\r\n            ref={ref}\r\n            onClick={onClick}\r\n            position={origin}\r\n            onPointerOver={onPointerOver}\r\n            onPointerOut={onPointerOut}\r\n            material={curMaterial}\r\n            rotation={rotation}\r\n            visible={visible}\r\n            geometry={geometry}>\r\n        {children}\r\n    </animated.mesh>;\r\n};\r\n","import { BoxBufferGeometry } from \"three\";\r\n\r\nexport type CuboidGeometryProps = {\r\n    lengthX : number,\r\n    lengthY : number,\r\n    lengthZ : number,\r\n}\r\n\r\nexport class CuboidGeometry extends BoxBufferGeometry {\r\n    private readonly className = \"CuboidGeometry\";\r\n\r\n    // TODO SM custom shape to handle mitred cuboids\r\n    constructor(props : CuboidGeometryProps) {\r\n        super(props.lengthX, props.lengthY, props.lengthZ, 1, 1, 1);\r\n    }\r\n}\r\n","import { CatmullRomCurve3, TubeBufferGeometry, Vector3 } from \"three\";\r\n\r\nexport type PipeGeometryProps = {\r\n    points : number[][],\r\n    radius : number,\r\n}\r\n\r\nexport class PipeGeometry extends TubeBufferGeometry {\r\n    // TODO SM build a custom curve subclass for supporting straight line segments connected via curves\r\n    // TODO SM custom shape to handle varying radius\r\n    constructor(props : PipeGeometryProps) {\r\n        const { points, radius } = props;\r\n        const pointsVec3 = points.map(point => new Vector3(point[0], point[1], point[2]));\r\n        super(new CatmullRomCurve3(pointsVec3, false), 64, radius, 8, false);\r\n    }\r\n}\r\n","import { Vector2, Vector3, Float32BufferAttribute } from \"three\";\r\n\r\nclass Float32Buffer {\r\n    private readonly buffer: number[];\r\n    private nextElemIndex : number;\r\n\r\n    constructor(public readonly length : number,\r\n                private readonly elemSize : number) {\r\n        this.buffer = Array(elemSize * length);\r\n        this.nextElemIndex = 0;\r\n    }\r\n\r\n    addElem(...elem : number[]) : number {\r\n        const bufferIndex = this.nextElemIndex * this.elemSize;\r\n        for (let i=0; i<this.elemSize; i++) {\r\n            this.buffer[bufferIndex+i] = elem[i];\r\n        }\r\n        return this.nextElemIndex++;\r\n    }\r\n\r\n    getElem(elemIndex : number) : number[] {\r\n        const bufferIndex = elemIndex * this.elemSize;\r\n        return this.buffer.slice(bufferIndex, bufferIndex + this.elemSize);\r\n    }\r\n\r\n    addCopyOf(srcElemIndex : number) : number {\r\n        return this.addElem(...this.getElem(srcElemIndex));\r\n    }\r\n\r\n    asAttribute() : Float32BufferAttribute {\r\n        return new Float32BufferAttribute(this.buffer, this.elemSize);\r\n    }\r\n\r\n    asBuffer() : number[] {\r\n        return this.buffer;\r\n    }\r\n\r\n    nextFreeElemIndex() : number {\r\n        return this.nextElemIndex;\r\n    }\r\n\r\n    ensureFilled(bufferName : string) : void {\r\n        if (this.nextElemIndex !== this.length) {\r\n            console.error(this);\r\n            throw new Error(`${bufferName} was not filled. Expected ${this.length}, Actual ${this.nextElemIndex}.`);\r\n        }\r\n    }\r\n}\r\n\r\n// used for uv (texture) arrays\r\nexport class Vec2Buffer extends Float32Buffer {\r\n    constructor(length : number) {\r\n        super(length, 2);\r\n    }\r\n\r\n    get(elemIndex : number) : Vector2 {\r\n        const [x, y] = this.getElem(elemIndex);\r\n        return new Vector2(x, y);\r\n    }\r\n\r\n    add(x : number, y : number) : number {\r\n        return this.addElem(x, y);\r\n    }\r\n}\r\n\r\n// used for position, normal & index arrays\r\nexport class Vec3Buffer extends Float32Buffer {\r\n    constructor(length : number) {\r\n        super(length, 3);\r\n    }\r\n\r\n    get(elemIndex : number) : Vector3 {\r\n        const [x, y, z] = this.getElem(elemIndex);\r\n        return new Vector3(x, y, z);\r\n    }\r\n\r\n    add(x : number, y : number, z : number) : number {\r\n        return this.addElem(x, y, z);\r\n    }\r\n}\r\n","import { BufferGeometry, ShapeUtils, Vec2, Vector2 } from \"three\";\r\nimport { Vec2Buffer, Vec3Buffer } from './Buffer';\r\n\r\ntype Polygon = number[][];\r\n\r\nexport type ExtrusionGeometryProps = {\r\n    frontFace : Polygon,\r\n    frontFaceHoles : Polygon[],\r\n    backFace : Polygon,\r\n    backFaceHoles : Polygon[],\r\n    smoothVertices : number[],\r\n    uvScale : number\r\n};\r\n\r\nexport class ExtrusionGeometry extends BufferGeometry {\r\n    private readonly className : string = \"ExtrusionGeometry\";\r\n\r\n    private readonly vertices : Vec3Buffer;\r\n    private readonly uvCoords : Vec2Buffer;\r\n    private readonly triangles : Vec3Buffer;\r\n\r\n    constructor(props : ExtrusionGeometryProps) {\r\n        super();\r\n\r\n        const { frontFace, frontFaceHoles, backFace, backFaceHoles, smoothVertices, uvScale } = props;\r\n\r\n        const numFaceVertices = this.countFaceVertices(frontFace, frontFaceHoles);\r\n        if (numFaceVertices !== this.countFaceVertices(backFace, backFaceHoles)) {\r\n            console.log(this.className, frontFace, frontFaceHoles, backFace, backFaceHoles);\r\n            throw new Error('Mismatching Front and Back faces in ' + this.className);\r\n        }\r\n\r\n        // using the earcut (https://github.com/mapbox/earcut) algorithm to triangulate the polygons.\r\n        // It is a fast *approximate* triangulation algorithm, which avoids producing any new vertices.\r\n        // If a more accurate triangulation is needed, we should switch to something like libtess,\r\n        //      but we will need to handle new vertices being added by the triangulator.\r\n        // NOTE: Any new vertices would be added to the front & back faces, but not to the side faces.\r\n        const frontFaceTriangles = this.triangulateFace(frontFace, frontFaceHoles);\r\n        const backFaceTriangles = this.triangulateFace(backFace, backFaceHoles);\r\n\r\n        // The Extrusion 3D Geometry consists of three parts:\r\n        //      front face\r\n        //      back face\r\n        //      side-faces (connecting the front and back faces via quads)\r\n        //\r\n        // We cannot use material.flatShading as it draws all faces faceted, but we want some faces to be drawn smooth.\r\n        // We cannot share vertices between the front-face and the side-face, or between the back-face and the side-face\r\n        //      as the vertex normals and UV coords will be different.\r\n        // We should share vertices between two side-face-quads if and only if the edge connecting them is smoothed.\r\n        // We should always share vertices within a single side-face-quad as the quad should always be drawn smoothed.\r\n        //\r\n        // There are numFaceVertices side-face quads.\r\n        // Each side-face quad has 4 vertices.\r\n        // However, if a face vertex is smoothed, the two side-face quads adjacent to the vertex would share 2 vertices,\r\n        //         reducing the total number of vertices by 2.\r\n        //\r\n        // Therefore, we have the following vertices:\r\n        //      front face: numFaceVertices\r\n        //      back face : numFaceVertices\r\n        //      side-faces: numSideFaces * 4 - numSmoothedVertices * 2 // numSideFaces === numFaceVertices\r\n        const numVertices = numFaceVertices + numFaceVertices + (numFaceVertices * 4) - (smoothVertices.length * 2);\r\n        const frontOffset = 0;\r\n        const backOffset = numFaceVertices;\r\n        this.vertices = new Vec3Buffer(numVertices);\r\n        this.uvCoords = new Vec2Buffer(numVertices);\r\n\r\n        // Each side-face quad has exactly two triangles\r\n        const numTriangles = frontFaceTriangles.length + backFaceTriangles.length + (numFaceVertices * 2);\r\n        this.triangles = new Vec3Buffer(numTriangles);\r\n\r\n        this.addFace(frontFace, frontFaceHoles, frontFaceTriangles, frontOffset, uvScale, false);\r\n        this.addFace(backFace, backFaceHoles, backFaceTriangles, backOffset, uvScale, true);\r\n\r\n        // add side faces\r\n        let nextVertexIndex = 0;\r\n        nextVertexIndex = this.addSideFacesForPolygon(nextVertexIndex, frontFace.length, false, smoothVertices,\r\n            frontOffset, backOffset);\r\n        frontFaceHoles.forEach(hole => {\r\n            nextVertexIndex = this.addSideFacesForPolygon(nextVertexIndex, hole.length, true, smoothVertices,\r\n                frontOffset, backOffset);\r\n        });\r\n\r\n        this.vertices.ensureFilled(this.className + '.vertices');\r\n        this.uvCoords.ensureFilled(this.className + '.uvCoords');\r\n        this.triangles.ensureFilled(this.className + '.triangles');\r\n\r\n        this.setAttribute('position', this.vertices.asAttribute());\r\n        this.setAttribute('uv', this.uvCoords.asAttribute());\r\n        this.setIndex(this.triangles.asBuffer());\r\n        this.computeVertexNormals();\r\n    }\r\n\r\n    protected countFaceVertices(face : Polygon, holes : Polygon[]) : number {\r\n        let vertices = face.length;\r\n        for (let i=0; i<holes.length; i++) {\r\n            vertices += holes[i].length;\r\n        }\r\n        return vertices;\r\n    }\r\n\r\n    protected toContour(polygon : Polygon) : Vec2[] {\r\n        return polygon.map(point => new Vector2(point[0], point[1]));\r\n    }\r\n\r\n    protected triangulateFace(face : Polygon, holes : Polygon[]) : number[][] {\r\n        // TODO use EarCut directly, to handle 3D points\r\n        const points = this.toContour(face);\r\n        const holePoints = holes.map(hole => this.toContour(hole));\r\n        return ShapeUtils.triangulateShape(points, holePoints);\r\n    }\r\n\r\n    private addVertexAndUV(vertex : number[], uvScale : number) : number {\r\n        this.uvCoords.add(vertex[0] / uvScale, vertex[1] / uvScale);\r\n        return this.vertices.add(vertex[0], vertex[1], vertex[2]);\r\n    }\r\n\r\n    private addFace(face : Polygon, holes : Polygon[], triangleIndices : number[][], triangleIndexOffset : number,\r\n                    uvScale : number, reverseTriangles : boolean) : void {\r\n        face.forEach(vertex => this.addVertexAndUV(vertex, uvScale));\r\n        holes.forEach(hole => hole.forEach(vertex => this.addVertexAndUV(vertex, uvScale)));\r\n\r\n        const offset = triangleIndexOffset;\r\n        triangleIndices.forEach(tri => {\r\n            const v0 = tri[0] + offset;\r\n            const v1 = tri[reverseTriangles ? 2 : 1] + offset;\r\n            const v2 = tri[reverseTriangles ? 1 : 2] + offset;\r\n\r\n            this.triangles.add(v0, v1, v2);\r\n        });\r\n    }\r\n\r\n    private addOrShareSideVertex(sourceIndex : number, sharedIndex : number, share : boolean) : number {\r\n        if (share) {\r\n            return sharedIndex;\r\n        }\r\n\r\n        this.uvCoords.add(0, 0); // don't texture side faces\r\n        return this.vertices.addCopyOf(sourceIndex);\r\n    }\r\n\r\n    private addSideFacesForPolygon(startVertexIndex : number, length : number, isHole : boolean,\r\n                                   smoothVertices : number[], frontOffset : number, backOffset : number) : number {\r\n        let prevBackIndex = -1;\r\n        let prevFrontIndex = -1;\r\n        const firstBackIndex = this.vertices.nextFreeElemIndex();\r\n        const firstFrontIndex = firstBackIndex + 1;\r\n\r\n        for (let left=0; left<length; left++) {\r\n            const right = (left + 1) % length;\r\n\r\n            const leftIndex = startVertexIndex + left;\r\n            const rightIndex = startVertexIndex + right;\r\n\r\n            // if face is smoothed at current vertex, share the point with previous side-face\r\n            const shareLeft = left > 0 && leftIndex in smoothVertices;\r\n            const backLeft = this.addOrShareSideVertex(leftIndex + backOffset, prevBackIndex, shareLeft);\r\n            const frontLeft = this.addOrShareSideVertex(leftIndex + frontOffset, prevFrontIndex, shareLeft);\r\n\r\n            // only share right if the very first vertex is smoothed and this is the very last side-face\r\n            const shareRight = right === 0 && rightIndex in smoothVertices;\r\n            const backRight = this.addOrShareSideVertex(rightIndex + backOffset, firstBackIndex, shareRight);\r\n            const frontRight = this.addOrShareSideVertex(rightIndex + frontOffset, firstFrontIndex, shareRight);\r\n\r\n            // ---- Top-Down view ----\r\n            //\r\n            //      front face\r\n            //     FL------FR\r\n            //     | .     |\r\n            //    |    .  |\r\n            //   BL------BR\r\n            //  back face\r\n            //\r\n            // triangles: [BR, FL, BL], [FL, BR, FR]\r\n            // for-hole faces, the normal needs to be reversed, thus the triangles are reversed\r\n            //           [BR, FL, FR], [FL, BR, BL]\r\n\r\n            // noinspection JSSuspiciousNameCombination\r\n            this.triangles.add(backRight, frontLeft, isHole ? frontRight : backLeft);\r\n            // noinspection JSSuspiciousNameCombination\r\n            this.triangles.add(frontLeft, backRight, isHole ? backLeft : frontRight);\r\n\r\n            prevBackIndex = backRight;\r\n            prevFrontIndex = frontRight;\r\n        }\r\n\r\n        return startVertexIndex + length;\r\n    }\r\n}\r\n","import { PlaneBufferGeometry } from \"three\";\r\n\r\nexport type GroundGeometryProps = {\r\n    lengthX : number,\r\n    lengthZ : number,\r\n}\r\n\r\nexport class GroundGeometry extends PlaneBufferGeometry {\r\n    private readonly className = \"GroundGeometry\";\r\n\r\n    // TODO SM custom to auto-rotate to Y-up? currently done in GroundMesh instead\r\n    constructor(props : GroundGeometryProps) {\r\n        super(props.lengthX, props.lengthZ, 1, 1);\r\n    }\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { Mesh, MeshProps } from \"./Mesh\";\r\nimport { ExtrusionGeometry, ExtrusionGeometryProps } from \"../geometry\";\r\n\r\ntype ExtrusionMeshProps = MeshProps & ExtrusionGeometryProps;\r\n\r\nexport const ExtrusionMesh : React.FC<ExtrusionMeshProps> = ({\r\n    frontFace, frontFaceHoles,\r\n    backFace, backFaceHoles,\r\n    smoothVertices, uvScale,\r\n    ...meshProps\r\n}) => {\r\n    const geometry = useMemo(\r\n        // TODO SM Need to dispose this geometry when props change - for all Meshes\r\n        () => new ExtrusionGeometry({\r\n            frontFace, frontFaceHoles, backFace, backFaceHoles, smoothVertices, uvScale\r\n        }),\r\n        [frontFace, frontFaceHoles, backFace, backFaceHoles, smoothVertices, uvScale]);\r\n\r\n    return <Mesh\r\n        geometry={geometry}\r\n        {...meshProps}\r\n    />;\r\n};\r\n","import React, { useMemo } from \"react\";\r\nimport { Mesh, MeshProps } from \"./Mesh\";\r\nimport { CuboidGeometry, CuboidGeometryProps } from \"../geometry\";\r\n\r\ntype CuboidMeshProps = MeshProps & CuboidGeometryProps;\r\n\r\nexport const CuboidMesh : React.FC<CuboidMeshProps> = ({\r\n    lengthX,\r\n    lengthY,\r\n    lengthZ,\r\n    ...meshProps\r\n}) => {\r\n    const geometry = useMemo(\r\n        () => new CuboidGeometry({lengthX, lengthY, lengthZ}),\r\n        [lengthX, lengthY, lengthZ]);\r\n\r\n    return <Mesh\r\n        geometry={geometry}\r\n        {...meshProps}\r\n    />;\r\n};\r\n","import React, { useMemo } from \"react\";\r\nimport { Mesh, MeshProps } from \"./Mesh\";\r\nimport { PipeGeometry, PipeGeometryProps } from \"../geometry\";\r\n\r\ntype PipeMeshProps = MeshProps & PipeGeometryProps;\r\n\r\nexport const PipeMesh : React.FC<PipeMeshProps> = ({\r\n    points, radius,\r\n    ...meshProps\r\n}) => {\r\n    const geometry = useMemo(\r\n        () => new PipeGeometry({points, radius}),\r\n        [points, radius]);\r\n\r\n    return <Mesh\r\n        geometry={geometry}\r\n        {...meshProps}\r\n    />;\r\n};\r\n","import React from \"react\";\r\nimport { animated, useSpring } from \"react-spring/three\";\r\n\r\n\r\ntype AnimatedGroupProps = {\r\n    origin : number[],\r\n    rotation : number[]\r\n}\r\n\r\nexport const AnimatedGroup : React.FC<AnimatedGroupProps> = ({\r\n    origin, rotation,\r\n    children\r\n}) => {\r\n    const { smoothedOrigin, smoothedRotation } = useSpring({\r\n        smoothedOrigin: origin,\r\n        smoothedRotation: rotation\r\n    });\r\n\r\n    return <animated.group\r\n        position={smoothedOrigin}\r\n        rotation={smoothedRotation}>\r\n        {children}\r\n    </animated.group>\r\n};\r\n","import React, { useMemo } from \"react\";\r\nimport { Mesh } from \"./Mesh\";\r\nimport { GroundGeometry, GroundGeometryProps } from \"../geometry\";\r\nimport {MaterialGroup} from \"../material\";\r\n\r\ntype GroundMeshProps = GroundGeometryProps & {\r\n    origin : number[],\r\n    material : MaterialGroup,\r\n    visible : boolean,\r\n};\r\n\r\nexport const GroundMesh : React.FC<GroundMeshProps> = ({\r\n    lengthX,\r\n    lengthZ,\r\n   ...meshProps\r\n}) => {\r\n    const geometry = useMemo(\r\n        () => new GroundGeometry({lengthX, lengthZ}),\r\n        [lengthX, lengthZ]);\r\n\r\n    // geometry is Z-up. Rotate to Y-up instead.\r\n    return <Mesh\r\n        id=\"ground\"\r\n        geometry={geometry}\r\n        rotation={[Math.PI * 3 / 2, 0, 0]}\r\n        canSelect={false}\r\n        selected={false}\r\n        onFocusObject={() => {}}\r\n        gazeSize={[1, 1, 1]}\r\n        operable={false}\r\n        animateDoors={false}\r\n        {...meshProps}\r\n    />;\r\n};\r\n","import React from \"react\";\r\nimport { MaterialLibrary } from \"../material\";\r\nimport { CanSelectObjectFn, IsObjectSelectedFn, FocusObjectFn } from \"./Mesh\";\r\nimport { ExtrusionMesh } from \"./ExtrusionMesh\";\r\nimport { CuboidMesh } from \"./CuboidMesh\";\r\nimport { PipeMesh } from \"./PipeMesh\";\r\nimport { SceneElement } from \"../ducks\";\r\n\r\nexport * from './Mesh';\r\nexport * from './AnimatedGroup';\r\nexport * from './GroundMesh';\r\n\r\n// TODO SM Typing - not any\r\nfunction MeshByType(type : string) : any {\r\n    switch (type) {\r\n        case \"extrusion\": return ExtrusionMesh;\r\n        case \"cuboid\": return CuboidMesh;\r\n        case \"pipe\": return PipeMesh;\r\n        default: throw new Error(`Unsupported mesh type ${type}`);\r\n    }\r\n}\r\n\r\nexport function BuildMeshes(elements : SceneElement[], materialLibrary : MaterialLibrary,\r\n                           onFocusObject : FocusObjectFn,\r\n                           canSelect : CanSelectObjectFn, isSelected : IsObjectSelectedFn,\r\n                           showHardware : boolean, animateDoors : boolean) {\r\n\r\n    function doBuild(elements : SceneElement[]) {\r\n        return elements.map(e => {\r\n            const { id, type, material, children, ...props } = e;\r\n            const Mesh = MeshByType(type);\r\n\r\n            return <Mesh\r\n                key={id}\r\n                id={id}\r\n                material={materialLibrary[material]}\r\n                canSelect={canSelect(id)}\r\n                selected={isSelected(id)}\r\n                onFocusObject={onFocusObject}\r\n                animateDoors={animateDoors}\r\n                visible={showHardware || !e.id.startsWith(\"feature/\")}\r\n                {...props}\r\n            >\r\n                {(children && doBuild(children)) || []}\r\n            </Mesh>\r\n        });\r\n    }\r\n\r\n    return doBuild(elements);\r\n}\r\n","import * as THREE from \"three\";\r\nimport {OrthographicCamera, PerspectiveCamera, Spherical, Vector3} from \"three\";\r\nimport CameraControls from \"camera-controls\";\r\nimport TWEEN from \"@tweenjs/tween.js\";\r\n\r\nexport interface CameraListener {\r\n    notifyStartedTransition : (controls : DifferentialCameraControls) => void;\r\n    notifyFinishedTransition : (controls : DifferentialCameraControls) => void;\r\n    notifyUpdatedView : (controls : DifferentialCameraControls, doingTransition : boolean) => void;\r\n}\r\n\r\n// Differential - tracks velocity, notifies listeners when view starts / stop moving\r\nexport class DifferentialCameraControls extends CameraControls {\r\n    private readonly minTransitionVelocity = 1000;\r\n    private readonly minTransitionIdleDuration = 0.2;\r\n    private readonly viewPadding = 1.2;\r\n\r\n    private readonly lastTarget : Vector3;\r\n    private readonly lastSpherical : Spherical;\r\n    private lastZoom : number;\r\n\r\n    private doingTransition : boolean;\r\n    private currentTransitionIdleDuration : number;\r\n    // used as an intermediate in calculations\r\n    private readonly tempVec3 : Vector3;\r\n\r\n    constructor(\r\n            private readonly listeners : Map<string, CameraListener>, // link-only, not owned\r\n            camera: PerspectiveCamera | OrthographicCamera,\r\n            domElement: HTMLElement) {\r\n        super(camera, domElement);\r\n\r\n        this.lastTarget = new Vector3();\r\n        this.lastSpherical = new Spherical();\r\n        this.lastZoom = 1;\r\n        this.doingTransition = false;\r\n        this.currentTransitionIdleDuration = 0;\r\n        this.tempVec3 = new Vector3();\r\n\r\n        this.update = this.update.bind(this);\r\n        this.reset = this.reset.bind(this);\r\n        this.notifyStartedTransition = this.notifyStartedTransition.bind(this);\r\n        this.notifyFinishedTransition = this.notifyFinishedTransition.bind(this);\r\n        this.notifyUpdatedView = this.notifyUpdatedView.bind(this);\r\n        this.onResize = this.onResize.bind(this);\r\n        this.resetView = this.resetView.bind(this);\r\n        this.setMode = this.setMode.bind(this);\r\n        this.setGaze = this.setGaze.bind(this);\r\n        this.worldToPage = this.worldToPage.bind(this);\r\n\r\n        window.addEventListener('resize', this.onResize);\r\n    }\r\n\r\n    dispose(): void {\r\n        window.removeEventListener('resize', this.onResize);\r\n        super.dispose();\r\n    }\r\n\r\n    public update(delta: number) : boolean {\r\n        const updated = super.update(delta);\r\n        if (!this.lastSpherical) {\r\n            // update gets called in constructor, we don't need to do anything in this case.\r\n            return updated;\r\n        }\r\n\r\n        const { theta, phi, radius } = this.lastSpherical;\r\n        const dist =\r\n            this.lastTarget.distanceTo(this._target) +\r\n            radius * Math.abs(theta - this._spherical.theta) +\r\n            radius * Math.abs(phi - this._spherical.phi) +\r\n            Math.abs(radius - this._spherical.radius) +\r\n            radius * Math.abs(this.lastZoom - this._zoom);\r\n        const velocity = Math.abs(delta) < 1e-6 ? 0 : (dist / delta);\r\n\r\n        this.reset();\r\n\r\n        if (this.doingTransition && velocity < this.minTransitionVelocity) {\r\n            this.currentTransitionIdleDuration += delta;\r\n            if (this.currentTransitionIdleDuration >= this.minTransitionIdleDuration) {\r\n                // transition has idle'd for long enough, stop the transition\r\n                this.doingTransition = false;\r\n                this.listeners.forEach(this.notifyFinishedTransition);\r\n            }\r\n        } else if (velocity >= this.minTransitionVelocity) {\r\n            this.currentTransitionIdleDuration = 0;\r\n            if (!this.doingTransition) {\r\n                // start a new transition\r\n                this.doingTransition = true;\r\n                this.listeners.forEach(this.notifyStartedTransition);\r\n            }\r\n        }\r\n\r\n        if (updated) {\r\n            this.listeners.forEach(this.notifyUpdatedView);\r\n        }\r\n\r\n        return updated;\r\n    }\r\n\r\n    public reset() : void {\r\n        this.lastTarget.copy(this._target);\r\n        this.lastSpherical.copy(this._spherical);\r\n        this.lastZoom = this._zoom;\r\n    }\r\n\r\n    private notifyStartedTransition(listener : CameraListener) {\r\n        listener.notifyStartedTransition(this);\r\n    }\r\n\r\n    private notifyFinishedTransition(listener : CameraListener) {\r\n        listener.notifyFinishedTransition(this);\r\n    }\r\n\r\n    private notifyUpdatedView(listener : CameraListener) {\r\n        listener.notifyUpdatedView(this, this.doingTransition);\r\n    }\r\n\r\n    private onResize(event : Event) : void {\r\n        console.log('resizing fired');\r\n        this.listeners.forEach(this.notifyUpdatedView);\r\n    }\r\n\r\n    public resetView(target : number[], position : number[]) : void {\r\n        const [tx, ty, tz] = target;\r\n        const [px, py, pz] = position;\r\n        this.setLookAt(px, py, pz, tx, ty, tz, false);\r\n    }\r\n\r\n    public setMode(primaryRotate : boolean) : void {\r\n        if (this.mouseButtons) {\r\n            const { ROTATE, TRUCK } = CameraControls.ACTION;\r\n            const primary = primaryRotate ? ROTATE : TRUCK;\r\n            const secondary = primary === ROTATE ? TRUCK : ROTATE;\r\n            this.mouseButtons.left = primary;\r\n            this.mouseButtons.right = secondary;\r\n        }\r\n    }\r\n\r\n    public setGaze(target : number[], gazeDirection : number[], gazeSize : number[]) : void {\r\n        const [w, h, d] = gazeSize;\r\n        const p = this.viewPadding;\r\n        const dist = this.getDistanceToFit(w*p, h*p, d*p);\r\n\r\n        const [dx, dy, dz] = gazeDirection;\r\n        this.tempVec3.set(dx, dy, dz).multiplyScalar(-dist);\r\n        const {x, y, z} = this.tempVec3;\r\n\r\n        const [tx, ty, tz] = target;\r\n        this.setLookAt(x+tx, y+ty, z+tz, tx, ty, tz, true);\r\n    }\r\n\r\n    public worldToPage(/* var */ position : Vector3) : boolean {\r\n        // position is currently in world-space. Convert to normalized screen space.\r\n        position.project(this._camera);\r\n\r\n        // convert to screen space\r\n        const bounds = this._domElement.getBoundingClientRect();\r\n        const halfWidth = 0.5 * bounds.width;\r\n        const halfHeight = 0.5 * bounds.height;\r\n        const left = bounds.left + window.scrollX;\r\n        const top = bounds.top + window.scrollY;\r\n\r\n        position.x = halfWidth * (1 + position.x) + left;\r\n        position.y = halfHeight * (1 - position.y) + top;\r\n        // leave z as-is. Could be used for depth sorting\r\n\r\n        // TODO SM return if it is actually currently visible in the page\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class CameraController {\r\n    private camera ?: PerspectiveCamera | OrthographicCamera;\r\n    private domElement ?: HTMLElement;\r\n    private cameraControls ?: DifferentialCameraControls;\r\n    private readonly listeners : Map<string, CameraListener>;\r\n\r\n    constructor() {\r\n        // Should only ever be init'd once, hence safe to install CameraControls here.\r\n        CameraControls.install({THREE});\r\n\r\n        this.camera = undefined;\r\n        this.domElement = undefined;\r\n        this.cameraControls = undefined;\r\n        this.listeners = new Map<string, CameraListener>();\r\n\r\n        this.addListener = this.addListener.bind(this);\r\n        this.removeListener = this.removeListener.bind(this);\r\n        this.setCamera = this.setCamera.bind(this);\r\n        this.updateFrame = this.updateFrame.bind(this);\r\n        this.getCameraControls = this.getCameraControls.bind(this);\r\n    }\r\n\r\n    public addListener(id : string, listener : CameraListener) : void {\r\n        this.listeners.set(id, listener);\r\n        if (this.cameraControls) {\r\n            this.camera?.updateWorldMatrix(true, false); // TODO SM necessary?\r\n            listener.notifyUpdatedView(this.cameraControls, false);\r\n        }\r\n    }\r\n\r\n    public removeListener(id : string) : void {\r\n        this.listeners.delete(id);\r\n    }\r\n\r\n    public setCamera(camera : PerspectiveCamera | OrthographicCamera | undefined, domElement : HTMLElement) : void {\r\n        if (this.camera === camera && this.domElement === domElement) {\r\n            return; // nothing to update\r\n        }\r\n\r\n        // clean up old cameraControls\r\n        if (this.cameraControls) {\r\n            this.cameraControls.dispose();\r\n            this.cameraControls = undefined;\r\n        }\r\n\r\n        this.camera = camera;\r\n        this.domElement = domElement;\r\n\r\n        if (this.camera && this.domElement) {\r\n            this.cameraControls = new DifferentialCameraControls(this.listeners, this.camera, this.domElement);\r\n        }\r\n\r\n        if (this.cameraControls) {\r\n            this.cameraControls.reset();\r\n            this.camera?.updateWorldMatrix(true, false);  // TODO SM necessary?\r\n            this.listeners.forEach((listener) =>\r\n                listener.notifyUpdatedView(this.cameraControls!, false));\r\n        }\r\n    }\r\n\r\n    public updateFrame(delta : number) : void {\r\n        this.cameraControls?.update(delta);\r\n        TWEEN.update();\r\n    }\r\n\r\n    public getCameraControls() : DifferentialCameraControls|undefined {\r\n        return this.cameraControls;\r\n    }\r\n}\r\n\r\nexport const GCameraController = new CameraController();\r\n","import React, { MutableRefObject, useEffect, useRef} from \"react\";\r\nimport {OrthographicCamera, PerspectiveCamera} from \"three\";\r\nimport {useFrame, useThree} from \"react-three-fiber\";\r\nimport {GCameraController} from \"../util/cameraController\";\r\n\r\nexport type CameraProps = {\r\n    counter : number,\r\n    gazeDirection ?: number[],\r\n    gazeTarget ?: number[],\r\n    gazeSize ?: number[],\r\n    orthographic : boolean,\r\n};\r\nexport const Camera : React.FC<CameraProps & {\r\n    startLookAt : number[],\r\n    startPosition : number[]\r\n    showJunctionAngles : boolean\r\n}> = ({\r\n    counter,\r\n    gazeDirection,\r\n    gazeTarget,\r\n    gazeSize,\r\n    orthographic,\r\n    startLookAt,\r\n    startPosition,\r\n    showJunctionAngles\r\n}) => {\r\n    const ref : MutableRefObject<PerspectiveCamera | OrthographicCamera | undefined> = useRef();\r\n    const { gl, setDefaultCamera } = useThree();\r\n\r\n    useEffect(() => {\r\n        if (ref.current) {\r\n            setDefaultCamera(ref.current);\r\n        }\r\n    }, [ref, setDefaultCamera]);\r\n\r\n    useEffect(() => {\r\n        GCameraController.setCamera(ref.current, gl.domElement);\r\n    }, [ref, gl]);\r\n\r\n    useEffect(() => {\r\n        GCameraController.getCameraControls()?.resetView(startLookAt, startPosition);\r\n    }, [startPosition, startLookAt]);\r\n\r\n    useEffect(() => {\r\n        if (gazeTarget && gazeDirection && gazeSize) {\r\n            GCameraController.getCameraControls()?.setGaze(gazeTarget, gazeDirection, gazeSize);\r\n        }\r\n    }, [counter, gazeDirection, gazeTarget, gazeSize]);\r\n\r\n    useEffect(() => {\r\n        GCameraController.getCameraControls()?.setMode(showJunctionAngles);\r\n    }, [showJunctionAngles]);\r\n\r\n    useFrame((state, delta) => {\r\n        GCameraController.updateFrame(delta);\r\n    });\r\n\r\n    const far = 10000;\r\n    return orthographic ?\r\n        <orthographicCamera ref={ref} position={startPosition} far={far}/> :\r\n        <perspectiveCamera ref={ref} position={startPosition} near={10} far={far} fov={60} />;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Light : React.FC = () => <>\r\n    <ambientLight intensity={0.9}/>\r\n    {/*<directionalLight intensity={1} position={[ 1, 0.5, 1]}/>*/}\r\n    {/*<directionalLight intensity={0.5} position={[-1, 1.5, 1]}/>*/}\r\n    {/*<directionalLight intensity={0.5} position={[ 0, 0.5, -1]}/>*/}\r\n</>;\r\n","import React, {ChangeEvent, MutableRefObject, useCallback, useEffect, useRef, useState} from \"react\";\r\nimport {GMeshByID, SceneMeasurement} from \"../ducks\";\r\nimport {animated, config, useSpring} from \"react-spring\";\r\nimport {Object3D, Vector3} from \"three\";\r\nimport {CameraListener, DifferentialCameraControls, GCameraController} from \"../util/cameraController\";\r\n\r\ntype MeasurementProps = {\r\n    measurement : SceneMeasurement,\r\n    allowShow : boolean,\r\n};\r\n\r\nclass CameraListenerMeasurement implements CameraListener {\r\n    private readonly startLocal : Vector3;\r\n    private readonly startWorld : Vector3;\r\n    private readonly finishLocal : Vector3;\r\n    private readonly finishWorld : Vector3;\r\n    private readonly midPoint : Vector3;\r\n\r\n    constructor(private readonly startParentID : string, startOrigin : number[],\r\n                private readonly finishParentID : string, finishOrigin : number[],\r\n                private readonly ref : MutableRefObject<any>,\r\n                private readonly notifyShowingChanged : (showing : boolean) => void,\r\n                private allowShow : boolean) {\r\n        this.startLocal = new Vector3(startOrigin[0], startOrigin[1], startOrigin[2]);\r\n        this.startWorld = new Vector3();\r\n        this.finishLocal = new Vector3(finishOrigin[0], finishOrigin[1], finishOrigin[2]);\r\n        this.finishWorld = new Vector3();\r\n        this.midPoint = new Vector3();\r\n\r\n        this.localToWorld = this.localToWorld.bind(this);\r\n        this.updatePosition = this.updatePosition.bind(this);\r\n        this.notifyStartedTransition = this.notifyStartedTransition.bind(this);\r\n        this.notifyFinishedTransition = this.notifyFinishedTransition.bind(this);\r\n        this.notifyUpdatedView = this.notifyUpdatedView.bind(this);\r\n    }\r\n\r\n    localToWorld(meshID : string, local : Vector3, /* out */ world : Vector3) : boolean {\r\n        const mesh : Object3D = GMeshByID.get(meshID)?.mesh;\r\n        if (mesh) {\r\n            world.copy(local);\r\n            mesh.localToWorld(world);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private updatePosition(controls: DifferentialCameraControls) : void {\r\n        if (this.ref.current &&\r\n            this.localToWorld(this.startParentID, this.startLocal, this.startWorld) &&\r\n            this.localToWorld(this.finishParentID, this.finishLocal, this.finishWorld)) {\r\n            this.midPoint.addVectors(this.startWorld, this.finishWorld).multiplyScalar(0.5);\r\n            if (controls.worldToPage(this.midPoint)) {\r\n                const { x, y } = this.midPoint;\r\n                this.ref.current.style.transform = `translate(-50%, -50%) translate(${x}px,${y}px)`;\r\n            }\r\n        }\r\n    }\r\n\r\n    public notifyStartedTransition(controls: DifferentialCameraControls) : void {\r\n        this.notifyShowingChanged(false);\r\n    }\r\n\r\n    public notifyFinishedTransition(controls: DifferentialCameraControls) : void {\r\n        if (this.allowShow) {\r\n            this.notifyShowingChanged(true);\r\n            this.updatePosition(controls);\r\n        }\r\n    }\r\n\r\n    public notifyUpdatedView(controls: DifferentialCameraControls, doingTransition : boolean) : void {\r\n        if (!doingTransition) {\r\n            this.updatePosition(controls);\r\n        }\r\n    }\r\n}\r\n\r\nexport const Measurement : React.FC<MeasurementProps> = ({\r\n    measurement,\r\n    allowShow,\r\n    ...props\r\n}) => {\r\n    const { id, length, start, finish } = measurement;\r\n    const [curLength, setCurLength ] = useState(length);\r\n    const [style, setStyle] = useSpring(() => ({opacity: 0, config: config.stiff}));\r\n    const ref : MutableRefObject<any> = useRef();\r\n\r\n    useEffect(() => {\r\n        setStyle({opacity: allowShow ? 1 : 0});\r\n    }, [allowShow, setStyle]);\r\n\r\n    useEffect(() => {\r\n        if (ref.current && allowShow) {\r\n            const notify = (showing : boolean) => setStyle({opacity: showing ? 1 : 0});\r\n            const listener = new CameraListenerMeasurement(start.parentId, start.origin, finish.parentId, finish.origin,\r\n                ref, notify, allowShow);\r\n            GCameraController.addListener(id, listener);\r\n\r\n            return () => {\r\n                GCameraController.removeListener(id);\r\n            }\r\n        }\r\n\r\n    }, [start.parentId, start.origin, finish.parentId, finish.origin, ref, allowShow, setStyle, id]);\r\n\r\n    const onChange = useCallback((event: ChangeEvent<HTMLInputElement>) => setCurLength(Number(event.target.value)),\r\n        [setCurLength]);\r\n\r\n    return <animated.input\r\n        ref={ref}\r\n        type=\"text\"\r\n        className=\"measurement\"\r\n        value={curLength}\r\n        style={style}\r\n        onChange={onChange}\r\n        />\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport { scene } from \"../data\";\r\nimport { doFocusObject } from \"../ducks\";\r\nimport { Scene } from \"./Scene\";\r\nimport {FocusObjectFn } from \"../mesh\";\r\n\r\nfunction mapStateToProps(state : any /* TODO SM type */) {\r\n    const { counter, gazeDirection, gazeTarget, gazeSize, orthographic, selected,\r\n        selectionFilter, showJunctionAngles, showGround, showHardware,\r\n        showMeasurements, animateDoors, } = state.rendererState;\r\n    const canSelect = (id : string) => id.startsWith(selectionFilter);\r\n    const isSelected = (id : string) => id === selected;\r\n    return { counter, gazeDirection, gazeTarget, gazeSize, orthographic, scene, canSelect, isSelected,\r\n        showJunctionAngles, showGround, showHardware, showMeasurements, animateDoors, };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch : any /* TODO SM type */) {\r\n    const onFocusObject : FocusObjectFn = (objectID, select) =>\r\n        dispatch(doFocusObject(objectID, select));\r\n    return { onFocusObject };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Scene);\r\n","import React from \"react\";\r\nimport { Vector3, MathUtils } from \"three\";\r\nimport { Canvas } from \"react-three-fiber\";\r\nimport { MaterialLibrary } from \"../material\";\r\nimport {BuildMeshes, FocusObjectFn, CanSelectObjectFn, IsObjectSelectedFn, AnimatedGroup, GroundMesh} from \"../mesh\";\r\nimport { Camera, CameraProps } from \"./Camera\";\r\nimport { Light } from \"./Light\";\r\nimport { SceneTree } from \"../ducks\";\r\nimport {Measurement} from \"./Measurement\";\r\n\r\ntype SceneProps = CameraProps & {\r\n    materialLibrary : MaterialLibrary,\r\n    onFocusObject : FocusObjectFn,\r\n    canSelect : CanSelectObjectFn,\r\n    isSelected : IsObjectSelectedFn,\r\n\r\n    showJunctionAngles : boolean,\r\n    showGround : boolean,\r\n    showHardware : boolean,\r\n    showMeasurements : boolean,\r\n    animateDoors : boolean,\r\n\r\n    scene : SceneTree\r\n};\r\n\r\nexport const Scene : React.FC<SceneProps> = ({\r\n    materialLibrary,\r\n    onFocusObject,\r\n    canSelect,\r\n    isSelected,\r\n\r\n    showJunctionAngles,\r\n    showGround,\r\n    showHardware,\r\n    showMeasurements,\r\n    animateDoors,\r\n\r\n    scene,\r\n    ...cameraProps\r\n}) => {\r\n    const { junctionAngles, defaultCamera, positions } = scene;\r\n\r\n    function BuildScene(scene : SceneTree) {\r\n        const upAxis = new Vector3(0, 1, 0);\r\n        const groups = Array(scene.positions.length);\r\n\r\n        const [ox, oy, oz] = scene.origin;\r\n        let origin = new Vector3(ox, oy, oz);\r\n        let rotationY = 0;\r\n        for (let i=0; i<positions.length; i++) {\r\n            const position = scene.positions[i];\r\n            let [offX, offY, offZ] = position.offset;\r\n\r\n            if (showJunctionAngles) {\r\n                rotationY += MathUtils.DEG2RAD * junctionAngles[i];\r\n            } else {\r\n                offZ = 0; // align glass centerlines\r\n                offX += 150; // TODO SM hardcoded gap\r\n            }\r\n\r\n            groups[i] = <AnimatedGroup\r\n                key={i}\r\n                origin={[origin.x, origin.y, origin.z]}\r\n                rotation={[0, rotationY, 0]}>\r\n                {\r\n                    BuildMeshes(position.children, materialLibrary, onFocusObject, canSelect,\r\n                        isSelected, showHardware, animateDoors)\r\n                }\r\n            </AnimatedGroup>;\r\n\r\n\r\n            origin.add(new Vector3(offX, offY, offZ).applyAxisAngle(upAxis, rotationY));\r\n        }\r\n\r\n        return groups;\r\n    }\r\n\r\n    return <div className=\"gl-view\">\r\n        <Canvas>\r\n            <Camera startLookAt={defaultCamera.lookAt}\r\n                    startPosition={defaultCamera.position}\r\n                    showJunctionAngles={showJunctionAngles}\r\n                    {...cameraProps} />\r\n            <Light/>\r\n            <GroundMesh\r\n                lengthX={scene.ground.lengthX}\r\n                lengthZ={scene.ground.lengthZ}\r\n                origin={scene.ground.origin}\r\n                material={materialLibrary.ground}\r\n                visible={showGround}\r\n                children={[]} />\r\n            { BuildScene(scene) }\r\n        </Canvas>\r\n        { scene.measurements.map(measurement => <Measurement\r\n            key={measurement.id}\r\n            measurement={measurement}\r\n            allowShow={showMeasurements}/>) }\r\n    </div>;\r\n};\r\n","import * as THREE from \"three\";\r\n\r\nexport const envMap = new THREE.CubeTextureLoader().setPath('img/envMap/').load([\r\n    'px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png'\r\n]);\r\n\r\nexport const bgMap = new THREE.CubeTextureLoader().setPath('img/bgMap/').load([\r\n    'px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png'\r\n]);\r\n\r\nexport const bgTexture = new THREE.TextureLoader().load(\"img/bg-texture.jpg\");\r\nbgTexture.wrapS = THREE.MirroredRepeatWrapping;\r\nbgTexture.wrapT = THREE.MirroredRepeatWrapping;\r\nbgTexture.repeat.set(24, 24);","import * as THREE from \"three\";\r\nimport { DoubleSide } from \"three\";\r\nimport { envMap } from './envmap';\r\n\r\nconst metalness = 0.3;\r\nconst roughness = 0.3;\r\nconst reflectivity = 0.99;\r\nconst clearcoat = 0.95;\r\nconst clearcoatRoughness = 0.1;\r\nconst transparent = true;\r\nconst side = DoubleSide;\r\nconst shininess = 0.1;\r\n\r\nconst standardColor = 0xa7ffeb;\r\nconst hoverColor = 0x64ffda;\r\nconst selectedColor = 0x00bfa5;\r\n\r\nexport const fullGlass = {\r\n    standard:\r\n        new THREE.MeshPhysicalMaterial({\r\n            metalness, roughness, reflectivity, clearcoat, clearcoatRoughness, transparent, side, envMap,\r\n            color: standardColor, opacity: 0.75 }),\r\n    hover:\r\n        new THREE.MeshPhysicalMaterial({\r\n            metalness, roughness, reflectivity, clearcoat, clearcoatRoughness, transparent, side, envMap,\r\n            color: hoverColor, opacity: 0.9, }),\r\n    selected:\r\n        new THREE.MeshPhysicalMaterial({\r\n            metalness, roughness, reflectivity, clearcoat, clearcoatRoughness, transparent, side, envMap,\r\n            color: selectedColor, opacity: 0.95, }),\r\n};\r\n\r\nexport const fastGlass = {\r\n    standard: new THREE.MeshPhongMaterial({shininess, envMap, reflectivity: 0.1, color: standardColor}),\r\n    hover: new THREE.MeshPhongMaterial({shininess, envMap, reflectivity: 0.1, color: hoverColor}),\r\n    selected: new THREE.MeshPhongMaterial({shininess, envMap, reflectivity: 0.1, color: selectedColor}),\r\n};\r\n","import * as THREE from \"three\";\r\nimport { envMap } from './envmap';\r\n\r\nconst metalness = 1.0;\r\nconst roughness = 0.1;\r\nconst clearcoat = 0.1;\r\nconst clearcoatRoughness = 0.2;\r\nconst reflectivity = 0.9;\r\nconst shininess = 0.9;\r\n\r\nconst standardColor = 0xffc107;\r\nconst hoverColor = 0xff8f00;\r\nconst selectedColor = 0xe65100;\r\n\r\nexport const fullMetal = {\r\n    standard: new THREE.MeshPhysicalMaterial({\r\n        metalness, roughness, clearcoat, clearcoatRoughness, envMap, color: standardColor}),\r\n    hover: new THREE.MeshPhysicalMaterial({\r\n        metalness, roughness, clearcoat, clearcoatRoughness, envMap, color: hoverColor}),\r\n    selected: new THREE.MeshPhysicalMaterial({\r\n        metalness, roughness, clearcoat, clearcoatRoughness, envMap, color: selectedColor}),\r\n};\r\n\r\nexport const fastMetal = {\r\n    standard: new THREE.MeshPhongMaterial({shininess, envMap, reflectivity, color: standardColor}),\r\n    hover: new THREE.MeshPhongMaterial({shininess, envMap, reflectivity, color: hoverColor}),\r\n    selected: new THREE.MeshPhongMaterial({shininess, envMap, reflectivity, color: selectedColor}),\r\n};\r\n","import * as THREE from \"three\";\r\nimport { bgTexture } from './envmap';\r\n\r\nconst color = 0xeeeeee;\r\n\r\nconst fullGroundMat = new THREE.MeshBasicMaterial({ map: bgTexture, color: color });\r\nconst fastGroundMat = new THREE.MeshBasicMaterial({ color });\r\n\r\nexport const fullGround = {\r\n    standard: fullGroundMat,\r\n    hover: fullGroundMat,\r\n    selected: fullGroundMat,\r\n};\r\n\r\nexport const fastGround = {\r\n    standard: fastGroundMat,\r\n    hover: fastGroundMat,\r\n    selected: fastGroundMat,\r\n};\r\n","import { Material } from \"three\";\r\nimport { fullGlass, fastGlass } from \"./Glass\";\r\nimport { fullMetal, fastMetal } from \"./Metal\";\r\nimport {fastGround, fullGround} from \"./Ground\";\r\n\r\nexport type MaterialGroup = {\r\n    standard : Material,\r\n    hover : Material,\r\n    selected : Material,\r\n}\r\n\r\nexport type MaterialLibrary = {\r\n    [key : string] : MaterialGroup,\r\n    glass: MaterialGroup,\r\n    metal: MaterialGroup\r\n    ground: MaterialGroup,\r\n}\r\n\r\nexport const fullMatLibrary : MaterialLibrary = {\r\n    glass: fullGlass,\r\n    metal: fullMetal,\r\n    ground: fullGround,\r\n};\r\n\r\nexport const fastMatLibrary : MaterialLibrary = {\r\n    glass: fastGlass,\r\n    metal: fastMetal,\r\n    ground: fastGround,\r\n};\r\n","import React, {useState} from 'react';\nimport './App.css';\nimport Scene from \"./rendererWebGL/scene\";\nimport {fullMatLibrary, fastMatLibrary} from \"./rendererWebGL/material\";\nimport {doModifyDisplay, doSetSelectionFilter, doFocusObject} from \"./rendererWebGL/ducks\";\nimport {connect} from \"react-redux\";\n\n\ntype AppProps = {\n    showJunctionAngles : boolean,\n    showGround : boolean,\n    showHardware : boolean,\n    showMeasurements : boolean,\n    animateDoors : boolean,\n    selectionFilter : string,\n\n    onShowJunctionAngles : (showJunctionAngles : boolean) => void,\n    onShowGround : (showGround : boolean) => void,\n    onShowHardware : (showHardware : boolean) => void,\n    onShowMeasurements : (showMeasurements : boolean) => void,\n    onAnimateDoors : (animateDoors : boolean) => void,\n\n    onFocusObject : (id : string, select : boolean) => void,\n    onSetSelectionFilter : (filter : string) => void,\n}\n\nconst App : React.FC<AppProps> = ({\n    showJunctionAngles, showGround, showHardware, showMeasurements,\n    animateDoors, selectionFilter,\n    onShowJunctionAngles, onShowGround, onShowHardware, onShowMeasurements, onAnimateDoors,\n    onFocusObject, onSetSelectionFilter\n}) => {\n\n    const [hdMaterial, setHdMaterial] = useState(true);\n\n    return <>\n        <div style={{position: \"fixed\", zIndex: 1}}>\n            <button type=\"button\" onClick={() => setHdMaterial(!hdMaterial)}>\n                Switch to {hdMaterial ? 'Fast' : 'Full'}\n            </button>\n            <button type=\"button\" onClick={() => onShowJunctionAngles(!showJunctionAngles)}>\n                Show {showJunctionAngles ? 'Flat' : 'Angled'}\n            </button>\n            <button type=\"button\" onClick={() => onShowHardware(!showHardware)}>\n                {showHardware ? 'Hide' : 'Show'} Hardware\n            </button>\n            <button type=\"button\" onClick={() => onShowGround(!showGround)}>\n                {showGround ? 'Hide' : 'Show'} Ground\n            </button>\n            <button type=\"button\" onClick={() => onShowMeasurements(!showMeasurements)}>\n                {showMeasurements ? 'Hide' : 'Show'} Measurements\n            </button>\n            <button type=\"button\" onClick={() => onAnimateDoors(!animateDoors)}>\n                {animateDoors ? 'Stop Animation' : 'Animate Doors'}\n            </button>\n            &nbsp;Allow Select:\n            <button type=\"button\" onClick={() => onSetSelectionFilter('')}>All</button>\n            <button type=\"button\" onClick={() => onSetSelectionFilter('panel/')}>Panels</button>\n            <button type=\"button\" onClick={() => onSetSelectionFilter('feature/')}>HW</button>\n\n            &nbsp;Select:\n            <button type=\"button\"\n                    disabled={selectionFilter==='feature/'}\n                    onClick={() => onFocusObject('panel/1', true)}>\n                P1\n            </button>\n            <button type=\"button\"\n                    disabled={selectionFilter==='feature/'}\n                    onClick={() => onFocusObject('panel/2', true)}>\n                P2\n            </button>\n            <button type=\"button\"\n                    disabled={selectionFilter==='panel/' || !showHardware}\n                    onClick={() => onFocusObject('feature/6', true)}>\n                Handle\n            </button>\n\n            &nbsp;Focus:\n            <button type=\"button\"\n                    onClick={() => onFocusObject('panel/3', false)}>\n                P3\n            </button>\n            <button type=\"button\"\n                    onClick={() => onFocusObject('panel/4', false)}>\n                P4\n            </button>\n            <button type=\"button\"\n                    disabled={!showHardware}\n                    onClick={() => onFocusObject('feature/1', false)}>\n                BotHinge\n            </button>\n        </div>\n        <Scene materialLibrary={hdMaterial ? fullMatLibrary : fastMatLibrary} />\n    </>;\n};\n\nfunction mapStateToProps(state : any /* TODO SM type */) {\n    const { showJunctionAngles, showGround, showHardware, showMeasurements, animateDoors, selectionFilter, } = state.rendererState;\n    return { showJunctionAngles, showGround, showHardware, showMeasurements, animateDoors, selectionFilter, };\n}\n\nfunction mapDispatchToProps(dispatch : any /* TODO SM type */) {\n    // TODO SM Use Sagas to chain these dispatches?\n    const onShowJunctionAngles = (showJunctionAngles : boolean) : void => {\n        dispatch(doModifyDisplay({ showJunctionAngles } ));\n        // TODO SM how to access ID in a better way? can we access state to get currently selected?\n        dispatch(doFocusObject('panel/1', false));\n    };\n\n    const onShowGround = (showGround : boolean) => dispatch(doModifyDisplay({showGround}));\n    const onShowHardware = (showHardware : boolean) => dispatch(doModifyDisplay({showHardware}));\n    const onShowMeasurements = (showMeasurements : boolean) => dispatch(doModifyDisplay({showMeasurements}));\n    const onAnimateDoors = (animateDoors : boolean) => dispatch(doModifyDisplay({animateDoors}));\n\n    const onFocusObject = (id : string, select : boolean) => dispatch(doFocusObject(id, select));\n    const onSetSelectionFilter = (filter : string) => dispatch(doSetSelectionFilter(filter));\n\n    return { onShowJunctionAngles, onShowGround, onShowHardware, onShowMeasurements,\n        onAnimateDoors, onFocusObject, onSetSelectionFilter };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport { combineReducers, createStore } from 'redux';\nimport {rendererReducer} from \"./rendererWebGL/ducks\";\n\nconst rootReducer = combineReducers({\n    rendererState: rendererReducer,\n});\n\nconst store = createStore(rootReducer,\n    // @ts-ignore\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n"],"sourceRoot":""}